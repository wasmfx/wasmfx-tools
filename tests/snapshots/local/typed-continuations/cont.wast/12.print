(module $state
  (type $f (;0;) (func (param i32) (result i32)))
  (type $k (;1;) (cont $f))
  (type (;2;) (func (result i32)))
  (type (;3;) (func (param i32 (ref 1)) (result i32)))
  (type (;4;) (func (result i32 (ref 1))))
  (func $runner (;0;) (type 3) (param $s i32) (param $k (ref 1)) (result i32)
    loop $loop
      block $on_get (result (ref 1))
        block $on_set (type 4) (result i32 (ref 1))
          local.get $s
          local.get $k
          resume $k (tag $get $on_get)(tag $set $on_set)
          return
        end
        local.set $k
        local.set $s
        br $loop
      end
      local.set $k
      br $loop
    end
    unreachable
  )
  (func $f (;1;) (type $f) (param i32) (result i32)
    i32.const 7
    suspend $set
    drop
    suspend $get
    i32.const 2
    i32.const 3
    suspend $set
    suspend $get
    i32.add
    i32.mul
    i32.add
  )
  (func (;2;) (type 2) (result i32)
    i32.const 0
    ref.func $f
    cont.new $k
    call $runner
  )
  (tag $get (;0;) (type 2) (result i32))
  (tag $set (;1;) (type $f) (param i32) (result i32))
  (export "run" (func 2))
  (elem (;0;) declare func $f)
)
